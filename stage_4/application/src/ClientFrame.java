package stage_4.application.src;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import stage_3.Client;
import stage_3.Product;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author kanar
 */
public class ClientFrame extends JFrame {

    /**
     * Creates new form ClientFrame
     */
    public ClientFrame() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clientManagementTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        removeClientLabel = new javax.swing.JLabel();
        removeClientTextField = new javax.swing.JTextField();
        removeClientButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        searchClientTextField = new javax.swing.JTextField();
        searchClientButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        addClientIdTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        addFirstNameTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        addLastNameTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        addEmailTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        addStreetTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        addZipCodeTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        addStateTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        addTelephoneTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        addCityTextField = new javax.swing.JTextField();
        resetClientButton = new javax.swing.JButton();
        addClientButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        clientModifyClientIDTextField = new javax.swing.JTextField();
        clientModifyFindButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        clientModifyFistNameTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        clientModifyLastNameTextField = new javax.swing.JTextField();
        clientModifyEmailTextField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        clientModifyStreetAddressTextField = new javax.swing.JTextField();
        clientModifyCityTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        clientModifyZipTextField = new javax.swing.JTextField();
        clientModifyStateTextField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        clientModifyResetButton = new javax.swing.JButton();
        clientModifyUpdateButton = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        clientModifyTelephoneTextField = new javax.swing.JTextField();
        clientManagementReportPanel = new javax.swing.JPanel();
        jScrollPaneClientReport = new javax.swing.JScrollPane();
        clientReportTable = new JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        clientManagementTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                clientManagementTabbedPaneStateChanged(evt);
            }
        });

        removeClientLabel.setText("Enter Client Id :");

        removeClientButton.setText("Remove");
        removeClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeClientButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(removeClientLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeClientButton)
                    .addComponent(removeClientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(346, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeClientLabel)
                    .addComponent(removeClientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(removeClientButton)
                .addContainerGap(356, Short.MAX_VALUE))
        );

        clientManagementTabbedPane.addTab("Remove", jPanel1);

        jLabel3.setText("Enter Client ID ");

        searchClientTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClientTextFieldActionPerformed(evt);
            }
        });

        searchClientButton.setText("Find");
        searchClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClientButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchClientButton)
                    .addComponent(searchClientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(286, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchClientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(searchClientButton)
                .addContainerGap(357, Short.MAX_VALUE))
        );

        clientManagementTabbedPane.addTab("Search", jPanel2);

        jLabel4.setText("Client ID");

        jLabel5.setText("First Name");

        jLabel6.setText("Last Name");

        jLabel7.setText("Email");

        jLabel8.setText("Street Address");

        jLabel9.setText("Zip Code");

        jLabel10.setText("State");

        jLabel11.setText("Telephone");

        jLabel12.setText("City");

        resetClientButton.setText("Reset");

        addClientButton.setText("Add");
        addClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClientButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(addCityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(60, 60, 60)
                                    .addComponent(addTelephoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60)
                                        .addComponent(addStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60)
                                        .addComponent(addZipCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(resetClientButton)
                        .addGap(48, 48, 48)
                        .addComponent(addClientButton)))
                .addContainerGap(192, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(92, 92, 92)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(60, 60, 60)
                            .addComponent(addStreetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(addEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(addLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(60, 60, 60)
                                    .addComponent(addFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(60, 60, 60)
                                    .addComponent(addClientIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addContainerGap(191, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(225, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addZipCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addTelephoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetClientButton)
                    .addComponent(addClientButton))
                .addGap(26, 26, 26))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addClientIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addStreetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(238, Short.MAX_VALUE)))
        );

        clientManagementTabbedPane.addTab("Add", jPanel3);

        jLabel13.setText("Client ID");

        clientModifyFindButton.setText("Find");
        clientModifyFindButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientModifyFindButtonActionPerformed(evt);
            }
        });

        jLabel14.setText("New First Name");

        jLabel15.setText("New Last Name");

        jLabel16.setText("New Email");

        jLabel17.setText("New Street Address");

        jLabel18.setText("New City");

        jLabel19.setText("New Zip Code");

        jLabel20.setText("New State");

        clientModifyResetButton.setText("Reset");
        clientModifyResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientModifyResetButtonActionPerformed(evt);
            }
        });

        clientModifyUpdateButton.setText("Update");
        clientModifyUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientModifyUpdateButtonActionPerformed(evt);
            }
        });

        jLabel21.setText("New Telephone");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(clientModifyStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(clientModifyZipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(clientModifyLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(clientModifyFistNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(clientModifyClientIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(clientModifyFindButton))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60)
                                        .addComponent(clientModifyCityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60)
                                        .addComponent(clientModifyStreetAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(60, 60, 60)
                                    .addComponent(clientModifyEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(clientModifyTelephoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(clientModifyResetButton)
                        .addGap(63, 63, 63)
                        .addComponent(clientModifyUpdateButton)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientModifyClientIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientModifyFindButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientModifyFistNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientModifyLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientModifyEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientModifyStreetAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientModifyCityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientModifyZipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientModifyStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientModifyTelephoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientModifyResetButton)
                    .addComponent(clientModifyUpdateButton))
                .addGap(31, 31, 31))
        );

        clientManagementTabbedPane.addTab("Modify", jPanel4);

        clientReportTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "firstName", "lastName", "email", "streetAddress", "city ", "zipCode ", "state ", "telephone ", "sales_id ", "clientId "
            }
        ));
        jScrollPaneClientReport.setViewportView(clientReportTable);

        javax.swing.GroupLayout clientManagementReportPanelLayout = new javax.swing.GroupLayout(clientManagementReportPanel);
        clientManagementReportPanel.setLayout(clientManagementReportPanelLayout);
        clientManagementReportPanelLayout.setHorizontalGroup(
            clientManagementReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientManagementReportPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneClientReport, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                .addContainerGap())
        );
        clientManagementReportPanelLayout.setVerticalGroup(
            clientManagementReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientManagementReportPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPaneClientReport, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addContainerGap())
        );

        clientManagementTabbedPane.addTab("See Client", clientManagementReportPanel);

        jLabel1.setText("Client Management");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(clientManagementTabbedPane)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientManagementTabbedPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removeClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeClientButtonActionPerformed
        try {
            // TODO add your handling code here:
            String client_id = removeClientTextField.getText();
            ArrayList<Client> clients = getClientFromFile("src/data/client.csv");
            if (findClientID(clients, client_id)) {
                removeClient(clients, client_id);
                saveListOfClients(clients);
            } else {
                JOptionPane.showMessageDialog(this, "Sorry, the client does not exist");
            }
        } catch (IOException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removeClientButtonActionPerformed

    private void searchClientTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClientTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchClientTextFieldActionPerformed

    private void addClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClientButtonActionPerformed
        // TODO add your handling code here:
        //Client(String firstName, String lastName, String email, String streetAddress, String city, String zipCode, String state,
        //String telephone, ArrayList<Sale> sales, String clientId)
        Client client = new Client(addFirstNameTextField.getText(), addLastNameTextField.getText(), addEmailTextField.getText(),
                addStreetTextField.getText(), addCityTextField.getText(), addZipCodeTextField.getText(), addStateTextField.getText(),
                addTelephoneTextField.getText(), null, addClientIdTextField.getText());
        saveClient(client, true);

    }//GEN-LAST:event_addClientButtonActionPerformed

    private void searchClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClientButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            ArrayList<Client> clients = getClientFromFile("src/data/client.csv");
            Client client = findClientDetails(clients, searchClientTextField.getText());
            if (client != null) {
                JOptionPane.showMessageDialog(this, detailsOfClient(client));
            } else {
                JOptionPane.showMessageDialog(this, detailsOfClient(client));
            }
        } catch (IOException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchClientButtonActionPerformed

    private void clientModifyFindButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientModifyFindButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            ArrayList<Client> clients = getClientFromFile("src/data/client.csv");
            Client client = findClientDetails(clients, clientModifyClientIDTextField.getText());
            if (client != null) {
                this.clientModifyCityTextField.setText(client.getCity());
                this.clientModifyEmailTextField.setText(client.getEmail());
                this.clientModifyFistNameTextField.setText(client.getFirstName());
                this.clientModifyLastNameTextField.setText(client.getState());
                this.clientModifyEmailTextField.setText(client.getEmail());
                this.clientModifyStateTextField.setText(client.getState());
                this.clientModifyStreetAddressTextField.setText(client.getStreetAddress());
                this.clientModifyTelephoneTextField.setText(client.getTelephone());
                this.clientModifyZipTextField.setText(client.getZipCode());
            } else {
                JOptionPane.showMessageDialog(this, "The Client Does not exist");
            }
        } catch (IOException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clientModifyFindButtonActionPerformed

    private void clientModifyResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientModifyResetButtonActionPerformed
        // TODO add your handling code here:
        this.clientModifyCityTextField.setText("");
        this.clientModifyEmailTextField.setText("");
        this.clientModifyFistNameTextField.setText("");
        this.clientModifyLastNameTextField.setText("");
        this.clientModifyEmailTextField.setText("");
        this.clientModifyStateTextField.setText("");
        this.clientModifyStreetAddressTextField.setText("");
        this.clientModifyTelephoneTextField.setText("");
        this.clientModifyZipTextField.setText("");
    }//GEN-LAST:event_clientModifyResetButtonActionPerformed

    private void clientModifyUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientModifyUpdateButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String client_id = clientModifyClientIDTextField.getText();
            ArrayList<Client> clients = getClientFromFile("src/data/client.csv");
            Client client = findClientDetails(clients, client_id);
            client.setCity(clientModifyCityTextField.getText());
            client.setEmail(clientModifyEmailTextField.getText());
            client.setFirstName(clientModifyFistNameTextField.getText());
            client.setLastName(clientModifyLastNameTextField.getText());
            client.setStreetAddress(clientModifyStreetAddressTextField.getText());
            client.setZipCode(clientModifyZipTextField.getText());
            client.setState(clientModifyStateTextField.getText());
            client.setTelephone(clientModifyTelephoneTextField.getText());
            if (findClientID(clients, client_id)) {
                UpdateClient(clients, client);
                saveListOfClients(clients);
            } else {
                JOptionPane.showMessageDialog(this, "Sorry, the client does not exist");
            }
        } catch (IOException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_clientModifyUpdateButtonActionPerformed

    private void clientManagementTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_clientManagementTabbedPaneStateChanged
        // TODO add your handling code here:
        int selectTab = clientManagementTabbedPane.getSelectedIndex();
        if (selectTab == 4) {
            addRowToJTable();

        }
    }//GEN-LAST:event_clientManagementTabbedPaneStateChanged
    public void addRowToJTable() {
        try {
           DefaultTableModel model = (DefaultTableModel) clientReportTable.getModel();
            ArrayList<Client> list = getClientFromFile("src/data/client.csv");
            Object rowData[] = new Object[10];
            for (int i = 0; i < list.size(); i++) {
                //firstName,lastName,email,streetAddress,city,zipCode,state,telephone,sales_id,clientId
                rowData[0] = list.get(i).getFirstName();
                rowData[1] = list.get(i).getLastName();
                rowData[2] = list.get(i).getEmail();
                rowData[3] = list.get(i).getStreetAddress();
                rowData[4] = list.get(i).getCity();
                rowData[5] = list.get(i).getZipCode();
                rowData[6] = list.get(i).getState();
                rowData[7] = list.get(i).getTelephone();
                rowData[8] = list.get(i).getSales();
                rowData[9] = list.get(i).getClientId();

                model.addRow(rowData);
            }
            //((DefaultTableModel) clientReportTable.getModel()).setRowCount(0);
            this.clientReportTable.setModel(model);
            jScrollPaneClientReport.setViewportView(clientReportTable);
        } catch (IOException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addCityTextField;
    private javax.swing.JButton addClientButton;
    private javax.swing.JTextField addClientIdTextField;
    private javax.swing.JTextField addEmailTextField;
    private javax.swing.JTextField addFirstNameTextField;
    private javax.swing.JTextField addLastNameTextField;
    private javax.swing.JTextField addStateTextField;
    private javax.swing.JTextField addStreetTextField;
    private javax.swing.JTextField addTelephoneTextField;
    private javax.swing.JTextField addZipCodeTextField;
    private javax.swing.JPanel clientManagementReportPanel;
    private javax.swing.JTabbedPane clientManagementTabbedPane;
    private javax.swing.JTextField clientModifyCityTextField;
    private javax.swing.JTextField clientModifyClientIDTextField;
    private javax.swing.JTextField clientModifyEmailTextField;
    private javax.swing.JButton clientModifyFindButton;
    private javax.swing.JTextField clientModifyFistNameTextField;
    private javax.swing.JTextField clientModifyLastNameTextField;
    private javax.swing.JButton clientModifyResetButton;
    private javax.swing.JTextField clientModifyStateTextField;
    private javax.swing.JTextField clientModifyStreetAddressTextField;
    private javax.swing.JTextField clientModifyTelephoneTextField;
    private javax.swing.JButton clientModifyUpdateButton;
    private javax.swing.JTextField clientModifyZipTextField;
    private JTable clientReportTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPaneClientReport;
    private javax.swing.JButton removeClientButton;
    private javax.swing.JLabel removeClientLabel;
    private javax.swing.JTextField removeClientTextField;
    private javax.swing.JButton resetClientButton;
    private javax.swing.JButton searchClientButton;
    private javax.swing.JTextField searchClientTextField;
    // End of variables declaration//GEN-END:variables

    private void saveClient(Client client, boolean mode) {
        System.out.println("Saving new client");
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter("src/data/client.csv", mode));
            //firstName,lastName,email,streetAddress,city,zipCode,state,telephone,sales_id,clientId
            if (mode == false) {
                writer.append("firstName,lastName,email,streetAddress,city,zipCode,state,telephone,sales_id,clientId");
            }
            writer.append("\n");
            writer.append(client.getFirstName() + ",");
            writer.append(client.getLastName() + ",");
            writer.append(client.getEmail() + ",");
            writer.append(client.getStreetAddress() + ",");
            writer.append(client.getCity() + ",");
            writer.append(client.getZipCode() + ",");
            writer.append(client.getState() + ",");
            writer.append(client.getTelephone() + ",");
            writer.append(client.getSales() + ",");
            writer.append(client.getClientId());
            writer.close();
        } catch (IOException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("End Saving new client");
    }

    private ArrayList<Client> getClientFromFile(String srcdataclientcsv) throws FileNotFoundException, IOException {

        ArrayList<Client> clients = new ArrayList<>();
        // File path is passed as parameter
        File file = new File(srcdataclientcsv);
        BufferedReader br = new BufferedReader(new FileReader(file));

        // Declaring a string variable
        String st;
        // Condition holds true till
        // there is character in a string
        br.readLine();
        while ((st = br.readLine()) != null) // Print the string
        {
            //firstName,lastName,email,streetAddress,city,zipCode,state,telephone,sales_id,clientId
            String data[] = st.split(",");
            System.out.println("ArraySize " + data.length);
            Client client = new Client(data[0], data[1], data[2], data[3], data[4], data[5], data[6], data[7], null, data[9]);
            clients.add(client);
        }
        return clients;
    }

    private boolean findClientID(ArrayList<Client> clients, String client_id) {
        for (Client client : clients) {
            if (client.getClientId().equals(client_id)) {
                System.out.println("Find the client");
                return true;
            }
        }
        System.out.println("Did not find the client");
        return false;
    }

    private Client findClientDetails(ArrayList<Client> clients, String client_id) {
        for (Client client : clients) {
            if (client.getClientId().equals(client_id)) {
                System.out.println("Find the client");
                return client;
            }
        }
        System.out.println("Did not find the client");
        return null;
    }

    private boolean removeClient(ArrayList<Client> clients, String client_id) {
        for (int i = 0; i < clients.size(); i++) {
            if (client_id.equals(clients.get(i).getClientId())) {
                System.out.println("Remove the client with ID " + client_id);
                clients.remove(i);
                return true;
            }
        }
        System.out.println("Did not remove from from the list");
        return false;
    }

    private void saveListOfClients(ArrayList<Client> clients) {
        System.out.println("Saving new client");
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter("src/data/client.csv", false));
            writer.append("firstName,lastName,email,streetAddress,city,zipCode,state,telephone,sales_id,clientId");
            for (Client client : clients) {
                writer.append("\n");
                writer.append(client.getFirstName() + ",");
                writer.append(client.getLastName() + ",");
                writer.append(client.getEmail() + ",");
                writer.append(client.getStreetAddress() + ",");
                writer.append(client.getCity() + ",");
                writer.append(client.getZipCode() + ",");
                writer.append(client.getState() + ",");
                writer.append(client.getTelephone() + ",");
                writer.append(client.getSales() + ",");
                writer.append(client.getClientId());

            }
            writer.close();
        } catch (IOException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private String detailsOfClient(Client client) {
        if (client != null) {
            String result = "Here are detail of the client : \n";
            result = result + "Client ID : " + client.getClientId() + "\n Client First Name : " + client.getFirstName()
                    + "\n Client Last Name " + client.getLastName() + "\n Client Address" + client.getStreetAddress()
                    + "\n Client Email" + client.getEmail()
                    + "\n Client City" + client.getCity() + "\n Client Zip Code"
                    + client.getZipCode() + "\n Client State" + client.getState()
                    + "\n Client Phone Number" + client.getTelephone();
            return result;
        } else {
            return "The client does not exist";
        }
    }

    private void UpdateClient(ArrayList<Client> clients, Client client) {
        for (Client elt : clients) {
            if (client.getClientId().equals(elt.getClientId())) {
                System.out.println("Update the client with ID " + client.getClientId());
                elt = client;

            }
        }
        System.out.println("Completed from the list");
    }

}
