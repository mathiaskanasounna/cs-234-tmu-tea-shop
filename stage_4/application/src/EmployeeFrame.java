package stage_4.application.src;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import stage_3.Client;
import stage_3.Employee;
import stage_3.Manager;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Teddy
 */
public class EmployeeFrame extends JFrame {

    /**
     * Creates new form Employee
     */
    public EmployeeFrame() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        EmployeeTab = new javax.swing.JTabbedPane();
        searchEmployeeTab = new javax.swing.JPanel();
        removeEmplyeeTab1 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        txtIdSearchEmployee = new javax.swing.JTextField();
        searchSearchEmployeeBtn = new javax.swing.JButton();
        clearSearchEmployeeBtn = new javax.swing.JButton();
        modifyEmployeeTab = new javax.swing.JPanel();
        txtIdModifyEmployee = new javax.swing.JTextField();
        txtFirstNameModifyEmployee = new javax.swing.JTextField();
        txtLastNameModifyEmployee = new javax.swing.JTextField();
        txtEmailModifyEmployee = new javax.swing.JTextField();
        txtStateModifyEmployee = new javax.swing.JTextField();
        txtCityModifyEmployee = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtZipModifyEmployee = new javax.swing.JTextField();
        saveModifyEmployeeBtn = new javax.swing.JButton();
        findModifyEmployeeBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        activeModifyRadioButton = new javax.swing.JRadioButton();
        unactiveModifyRadioButton = new javax.swing.JRadioButton();
        jLabel19 = new javax.swing.JLabel();
        txtPhoneModifyEmployee = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        clearModifyEmployeeBtn = new javax.swing.JButton();
        removeEmplyeeTab = new javax.swing.JPanel();
        removeIdEmployee = new javax.swing.JLabel();
        txtIdNumberRemoveEmployee = new javax.swing.JTextField();
        removeRemoveemployeeBtn = new javax.swing.JButton();
        clearRemoveEmployeeBtn = new javax.swing.JButton();
        addEmployeeTab = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtFirstNameAddEmployee = new javax.swing.JTextField();
        txtLastNameAddEmployee = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtEmailAddEmployee = new javax.swing.JTextField();
        txtPhoneAddEmployee = new javax.swing.JTextField();
        txtStateAddEmployee = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtCityAddEmployee = new javax.swing.JTextField();
        txtZipAddEmployee = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        saveAddEmployeeBtn = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        txtIdAddEmployee = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtStreetAddEmployee = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtUserNameAddEmployee = new javax.swing.JTextField();
        listEmployeePanel = new javax.swing.JPanel();
        employeeScrollPane = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 36)); // NOI18N
        jLabel1.setText("Employee");

        EmployeeTab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        EmployeeTab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                EmployeeTabStateChanged(evt);
            }
        });

        removeEmplyeeTab1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel28.setText("ID Number");

        searchSearchEmployeeBtn.setText("Search");
        searchSearchEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSearchEmployeeBtnActionPerformed(evt);
            }
        });

        clearSearchEmployeeBtn.setText("Clear");
        clearSearchEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSearchEmployeeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeEmplyeeTab1Layout = new javax.swing.GroupLayout(removeEmplyeeTab1);
        removeEmplyeeTab1.setLayout(removeEmplyeeTab1Layout);
        removeEmplyeeTab1Layout.setHorizontalGroup(
            removeEmplyeeTab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeEmplyeeTab1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addGap(33, 33, 33)
                .addGroup(removeEmplyeeTab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clearSearchEmployeeBtn)
                    .addGroup(removeEmplyeeTab1Layout.createSequentialGroup()
                        .addComponent(txtIdSearchEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchSearchEmployeeBtn)))
                .addContainerGap(409, Short.MAX_VALUE))
        );
        removeEmplyeeTab1Layout.setVerticalGroup(
            removeEmplyeeTab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeEmplyeeTab1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(removeEmplyeeTab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(txtIdSearchEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchSearchEmployeeBtn))
                .addGap(31, 31, 31)
                .addComponent(clearSearchEmployeeBtn)
                .addContainerGap(317, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout searchEmployeeTabLayout = new javax.swing.GroupLayout(searchEmployeeTab);
        searchEmployeeTab.setLayout(searchEmployeeTabLayout);
        searchEmployeeTabLayout.setHorizontalGroup(
            searchEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchEmployeeTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(removeEmplyeeTab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        searchEmployeeTabLayout.setVerticalGroup(
            searchEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchEmployeeTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(removeEmplyeeTab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        EmployeeTab.addTab("Search", searchEmployeeTab);

        modifyEmployeeTab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("First Name");

        jLabel3.setText("Last Name");

        jLabel5.setText("Phone Number");

        jLabel6.setText("State");

        jLabel7.setText("Zip Code");

        jLabel8.setText("City");

        txtZipModifyEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipModifyEmployeeActionPerformed(evt);
            }
        });

        saveModifyEmployeeBtn.setText("Save");
        saveModifyEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveModifyEmployeeBtnActionPerformed(evt);
            }
        });

        findModifyEmployeeBtn.setText("Find");
        findModifyEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findModifyEmployeeBtnActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setToolTipText("");

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        jLabel17.setText("Status");

        buttonGroup1.add(activeModifyRadioButton);
        activeModifyRadioButton.setText("Active");

        buttonGroup1.add(unactiveModifyRadioButton);
        unactiveModifyRadioButton.setText("Unactive");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel17))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(activeModifyRadioButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(unactiveModifyRadioButton)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(activeModifyRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(unactiveModifyRadioButton)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel19.setText("ID Number");

        jLabel4.setText("E-mail");

        clearModifyEmployeeBtn.setText("Clear");
        clearModifyEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearModifyEmployeeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout modifyEmployeeTabLayout = new javax.swing.GroupLayout(modifyEmployeeTab);
        modifyEmployeeTab.setLayout(modifyEmployeeTabLayout);
        modifyEmployeeTabLayout.setHorizontalGroup(
            modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modifyEmployeeTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(jLabel19)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modifyEmployeeTabLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(txtCityModifyEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE))
                    .addGroup(modifyEmployeeTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPhoneModifyEmployee))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyEmployeeTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStateModifyEmployee))
                    .addGroup(modifyEmployeeTabLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFirstNameModifyEmployee)
                            .addComponent(txtLastNameModifyEmployee, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtIdModifyEmployee)
                            .addComponent(txtEmailModifyEmployee, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtZipModifyEmployee))))
                .addGap(73, 73, 73)
                .addComponent(findModifyEmployeeBtn)
                .addGap(116, 116, 116))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyEmployeeTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clearModifyEmployeeBtn)
                .addGap(57, 57, 57)
                .addComponent(saveModifyEmployeeBtn)
                .addGap(311, 311, 311))
        );
        modifyEmployeeTabLayout.setVerticalGroup(
            modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modifyEmployeeTabLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdModifyEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(findModifyEmployeeBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstNameModifyEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastNameModifyEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailModifyEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPhoneModifyEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStateModifyEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(6, 6, 6)
                .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCityModifyEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtZipModifyEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(modifyEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveModifyEmployeeBtn)
                    .addComponent(clearModifyEmployeeBtn))
                .addGap(28, 28, 28))
        );

        EmployeeTab.addTab("Modify", modifyEmployeeTab);

        removeEmplyeeTab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        removeIdEmployee.setText("ID Number");

        removeRemoveemployeeBtn.setText("Remove");
        removeRemoveemployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRemoveemployeeBtnActionPerformed(evt);
            }
        });

        clearRemoveEmployeeBtn.setText("Clear");
        clearRemoveEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearRemoveEmployeeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeEmplyeeTabLayout = new javax.swing.GroupLayout(removeEmplyeeTab);
        removeEmplyeeTab.setLayout(removeEmplyeeTabLayout);
        removeEmplyeeTabLayout.setHorizontalGroup(
            removeEmplyeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeEmplyeeTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(removeIdEmployee)
                .addGap(33, 33, 33)
                .addGroup(removeEmplyeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removeEmplyeeTabLayout.createSequentialGroup()
                        .addComponent(clearRemoveEmployeeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(removeEmplyeeTabLayout.createSequentialGroup()
                        .addComponent(txtIdNumberRemoveEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(removeRemoveemployeeBtn)
                        .addContainerGap(395, Short.MAX_VALUE))))
        );
        removeEmplyeeTabLayout.setVerticalGroup(
            removeEmplyeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeEmplyeeTabLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(removeEmplyeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeIdEmployee)
                    .addComponent(txtIdNumberRemoveEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeRemoveemployeeBtn))
                .addGap(36, 36, 36)
                .addComponent(clearRemoveEmployeeBtn)
                .addContainerGap(324, Short.MAX_VALUE))
        );

        EmployeeTab.addTab("Remove", removeEmplyeeTab);

        addEmployeeTab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setText("First Name ");

        jLabel10.setText("Last Name");

        jLabel12.setText("E-mail");

        jLabel13.setText("Phone Number");

        jLabel11.setText("State");

        jLabel14.setText("City");

        jLabel16.setText("Zip Code");

        saveAddEmployeeBtn.setText("Save");
        saveAddEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAddEmployeeBtnActionPerformed(evt);
            }
        });

        jLabel18.setText("ID Number");

        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel15.setText("Street Address");

        jLabel20.setText("User Name");

        javax.swing.GroupLayout addEmployeeTabLayout = new javax.swing.GroupLayout(addEmployeeTab);
        addEmployeeTab.setLayout(addEmployeeTabLayout);
        addEmployeeTabLayout.setHorizontalGroup(
            addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEmployeeTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addEmployeeTabLayout.createSequentialGroup()
                        .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLastNameAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhoneAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtEmailAddEmployee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                .addComponent(txtFirstNameAddEmployee, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(addEmployeeTabLayout.createSequentialGroup()
                        .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(addEmployeeTabLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtStreetAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addEmployeeTabLayout.createSequentialGroup()
                                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3)
                                    .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtIdAddEmployee, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtStateAddEmployee, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtCityAddEmployee, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtZipAddEmployee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveAddEmployeeBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(addEmployeeTabLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtUserNameAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        addEmployeeTabLayout.setVerticalGroup(
            addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEmployeeTabLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtFirstNameAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtLastNameAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtPhoneAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtStreetAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtStateAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCityAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtZipAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(txtIdAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtUserNameAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(addEmployeeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(saveAddEmployeeBtn))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        EmployeeTab.addTab("Add", addEmployeeTab);

        employeeTable.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "firstName", "lastName", "email", "streetAddress", "city", "zipCode", "state", "telephone", "employeeId", "hireDate", "leaveDate", "employeeStatus", ""
            }
        ));
        employeeScrollPane.setViewportView(employeeTable);

        javax.swing.GroupLayout listEmployeePanelLayout = new javax.swing.GroupLayout(listEmployeePanel);
        listEmployeePanel.setLayout(listEmployeePanelLayout);
        listEmployeePanelLayout.setHorizontalGroup(
            listEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listEmployeePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                .addContainerGap())
        );
        listEmployeePanelLayout.setVerticalGroup(
            listEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listEmployeePanelLayout.createSequentialGroup()
                .addComponent(employeeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        EmployeeTab.addTab("List Employee", listEmployeePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(EmployeeTab)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(EmployeeTab)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtZipModifyEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipModifyEmployeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipModifyEmployeeActionPerformed

    private void findModifyEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findModifyEmployeeBtnActionPerformed
        try {
            // TODO add your handling code here:
            ArrayList<Employee> employees = getEmployeeFromFile("src/data/employee.csv");
            Employee employee = findEmployeeDetails(employees, txtIdModifyEmployee.getText());
            if (employee != null) {
                this.txtIdModifyEmployee.setText(employee.getEmployeeId());
                this.txtFirstNameModifyEmployee.setText(employee.getFirstName());
                this.txtLastNameModifyEmployee.setText(employee.getLastName());
                this.txtEmailModifyEmployee.setText(employee.getLastName());
                this.txtPhoneModifyEmployee.setText(employee.getTelephone());
                this.txtStateModifyEmployee.setText(employee.getState());
                this.txtCityModifyEmployee.setText(employee.getCity());
                this.txtZipModifyEmployee.setText(employee.getZipCode());
            } else {
                JOptionPane.showMessageDialog(this, "The employee Does not exist");
            }
        } catch (IOException ex) {
            Logger.getLogger(EmployeeFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_findModifyEmployeeBtnActionPerformed

    private void clearSearchEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSearchEmployeeBtnActionPerformed
        // TODO add your handling code here:
        txtIdSearchEmployee.setText("");
    }//GEN-LAST:event_clearSearchEmployeeBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        txtIdAddEmployee.setText("");
        txtFirstNameAddEmployee.setText("");
        txtLastNameAddEmployee.setText("");
        txtEmailAddEmployee.setText("");
        txtPhoneAddEmployee.setText("");
        txtStateAddEmployee.setText("");
        txtCityAddEmployee.setText("");
        txtZipAddEmployee.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void clearModifyEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearModifyEmployeeBtnActionPerformed
        // TODO add your handling code here:
        txtIdModifyEmployee.setText("");
        txtFirstNameModifyEmployee.setText("");
        txtLastNameModifyEmployee.setText("");
        txtEmailModifyEmployee.setText("");
        txtPhoneModifyEmployee.setText("");
        txtStateModifyEmployee.setText("");
        txtCityModifyEmployee.setText("");
        txtZipModifyEmployee.setText("");
    }//GEN-LAST:event_clearModifyEmployeeBtnActionPerformed

    private void saveAddEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAddEmployeeBtnActionPerformed
//         TODO add your handling code here:
//        (String firstName, String lastName, String email, String streetAddress, String city, String zipCode, String state, String telephone,
//            String employeeId, LocalDate hireDate, LocalDate leaveDate, String employeeStatus, String userName) {
        Employee employee = new Employee(txtFirstNameAddEmployee.getText(), txtLastNameAddEmployee.getText(), txtEmailAddEmployee.getText(),
                txtStreetAddEmployee.getText(), txtCityAddEmployee.getText(), txtZipAddEmployee.getText(), txtStateAddEmployee.getText(),
                txtPhoneAddEmployee.getText(), txtIdAddEmployee.getText(), LocalDate.now(), LocalDate.now(), "Active", txtUserNameAddEmployee.getText());
        saveEmployee(employee, true);
    }//GEN-LAST:event_saveAddEmployeeBtnActionPerformed

    private void clearRemoveEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearRemoveEmployeeBtnActionPerformed
        // TODO add your handling code here:
        txtIdNumberRemoveEmployee.setText("");
    }//GEN-LAST:event_clearRemoveEmployeeBtnActionPerformed

    private void removeRemoveemployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRemoveemployeeBtnActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String employee_id = txtIdNumberRemoveEmployee.getText();
            ArrayList<Employee> employees = getEmployeeFromFile("src/data/employee.csv");
            if (findEmployeeID(employees, employee_id)) {
                removeEmployee(employees, employee_id);
                saveListOfEmployees(employees);
            } else {
                JOptionPane.showMessageDialog(this, "Sorry, the Employee does not exist");
            }
        } catch (IOException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removeRemoveemployeeBtnActionPerformed

    private void searchSearchEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSearchEmployeeBtnActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            ArrayList<Employee> employees = getEmployeeFromFile("src/data/employee.csv");
            Employee employee = findEmployeeDetails(employees, txtIdSearchEmployee.getText());
            if (employee != null) {
                JOptionPane.showMessageDialog(this, detailsOfEmployee(employee));
            } else {
                JOptionPane.showMessageDialog(this, detailsOfEmployee(employee));
            }
        } catch (IOException ex) {
            Logger.getLogger(EmployeeFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchSearchEmployeeBtnActionPerformed

    private void saveModifyEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveModifyEmployeeBtnActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String employee_id = txtIdModifyEmployee.getText();
            ArrayList<Employee> employees = getEmployeeFromFile("src/data/employee.csv");
            Employee employee = findEmployeeDetails(employees, employee_id);
            employee.setFirstName(txtFirstNameModifyEmployee.getText());
            employee.setLastName(txtLastNameModifyEmployee.getText());
            employee.setEmail(txtEmailModifyEmployee.getText());
            employee.setTelephone(txtPhoneModifyEmployee.getText());
            employee.setState(txtStateModifyEmployee.getText());
            employee.setCity(txtCityModifyEmployee.getText());
            employee.setZipCode(txtZipModifyEmployee.getText());
            if (activeModifyRadioButton.isSelected()) {
                employee.setEmployeeStatus("Active");
            } else {
                employee.setEmployeeStatus("Unactive");
            }
            if (findEmployeeID(employees, employee_id)) {
                UpdateEmployee(employees, employee);
                saveListOfEmployees(employees);
            } else {
                JOptionPane.showMessageDialog(this, "Sorry, the client does not exist");
            }
        } catch (IOException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_saveModifyEmployeeBtnActionPerformed

    private void EmployeeTabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_EmployeeTabStateChanged
        // TODO add your handling code here:
        int selectTab = EmployeeTab.getSelectedIndex();
        if (selectTab == 4) {
            addRowToJTable();

        }
    }//GEN-LAST:event_EmployeeTabStateChanged
    private ArrayList<Employee> getEmployeeFromFile(String srcdataemployeecsv) throws FileNotFoundException, IOException {
        ArrayList<Employee> employees = new ArrayList<>();
        // File path is passed as parameter
        File file = new File(srcdataemployeecsv);
        BufferedReader br = new BufferedReader(new FileReader(file));
        // Declaring a string variable
        String st;
        // Condition holds true till
        // there is character in a string
        br.readLine();
        while ((st = br.readLine()) != null) // Print the string
        {
            //firstName,lastName,email,streetAddress,city,zipCode,state,telephone,sales_id,clientId
            String data[] = st.split(",");
            System.out.println("ArraySize " + data.length);
//            //String firstName, String lastName, String email, String streetAddress, String city,
//                    String zipCode, String state, String telephone, String employeeId, LocalDate hireDate,
//                    LocalDate leaveDate, String employeeStatus, String userName
//            //
            Employee employee = new Employee(data[0], data[1], data[2], data[3], data[4],
                    data[5], data[6], data[7], data[8], LocalDate.parse(data[9]), LocalDate.parse(data[10]), data[11], data[12]);
            employees.add(employee);
        }
        return employees;
    }

    private boolean findEmployeeID(ArrayList<Employee> employees, String employee_id) {
        for (Employee employee : employees) {
            if (employee.getEmployeeId().equals(employee_id)) {
                System.out.println("Find the employee");
                return true;
            }
        }
        System.out.println("Did not find the employee");
        return false;
    }

    private Employee findEmployeeDetails(ArrayList<Employee> employees, String employee_id) {
        for (Employee employee : employees) {
            if (employee.getEmployeeId().equals(employee_id)) {
                System.out.println("Find the employee");
                return employee;
            }
        }
        System.out.println("Did not find the employee");
        return null;
    }

    private boolean removeEmployee(ArrayList<Employee> employees, String employee_id) {
        for (int i = 0; i < employees.size(); i++) {
            if (employee_id.equals(employees.get(i).getEmployeeId())) {
                System.out.println("Remove the employee with ID " + employee_id);
                employees.remove(i);
                return true;
            }
        }
        System.out.println("Did not remove employee from the list");
        return false;
    }

    private void saveListOfEmployees(ArrayList<Employee> employees) {
        System.out.println("Saving new employee");
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter("src/data/employee.csv", false));
            writer.append("firstName,lastName,email,streetAddress,city,zipCode,state,telephone,employeeId,"
                    + "hireDate,leaveDate,employeeStatus,userName");
            for (Employee employee : employees) {
                writer.append("\n");
                writer.append(employee.getFirstName() + ",");
                writer.append(employee.getLastName() + ",");
                writer.append(employee.getEmail() + ",");
                writer.append(employee.getStreetAddress() + ",");
                writer.append(employee.getCity() + ",");
                writer.append(employee.getZipCode() + ",");
                writer.append(employee.getState() + ",");
                writer.append(employee.getTelephone() + ",");
                writer.append(employee.getEmployeeId() + ",");
                writer.append(employee.getHireDate() + ",");
                writer.append(employee.getLeaveDate() + ",");
                writer.append(employee.getEmployeeStatus() + ",");
                writer.append(employee.getUserName());

            }
            writer.close();

        } catch (IOException ex) {
            Logger.getLogger(EmployeeFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void saveEmployee(Employee employee, boolean mode) {
        System.out.println("Saving new employee");
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter("src/data/employee.csv", mode));
            if (mode == false) {
                writer.append("firstName,lastName,email,streetAddress,city,zipCode,state,telephone,employeeId,"
                        + "hireDate,leaveDate,employeeStatus,userName");
            }
            writer.append("\n");
            writer.append(employee.getFirstName() + ",");
            writer.append(employee.getLastName() + ",");
            writer.append(employee.getEmail() + ",");
            writer.append(employee.getStreetAddress() + ",");
            writer.append(employee.getCity() + ",");
            writer.append(employee.getZipCode() + ",");
            writer.append(employee.getState() + ",");
            writer.append(employee.getTelephone() + ",");
            writer.append(employee.getEmployeeId() + ",");
            writer.append(employee.getHireDate() + ",");
            writer.append(employee.getLeaveDate() + ",");
            writer.append(employee.getEmployeeStatus() + ",");
            writer.append(employee.getUserName());

            writer.close();

        } catch (IOException ex) {
            Logger.getLogger(EmployeeFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane EmployeeTab;
    private javax.swing.JRadioButton activeModifyRadioButton;
    private javax.swing.JPanel addEmployeeTab;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearModifyEmployeeBtn;
    private javax.swing.JButton clearRemoveEmployeeBtn;
    private javax.swing.JButton clearSearchEmployeeBtn;
    private javax.swing.JScrollPane employeeScrollPane;
    private javax.swing.JTable employeeTable;
    private javax.swing.JButton findModifyEmployeeBtn;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel listEmployeePanel;
    private javax.swing.JPanel modifyEmployeeTab;
    private javax.swing.JPanel removeEmplyeeTab;
    private javax.swing.JPanel removeEmplyeeTab1;
    private javax.swing.JLabel removeIdEmployee;
    private javax.swing.JButton removeRemoveemployeeBtn;
    private javax.swing.JButton saveAddEmployeeBtn;
    private javax.swing.JButton saveModifyEmployeeBtn;
    private javax.swing.JPanel searchEmployeeTab;
    private javax.swing.JButton searchSearchEmployeeBtn;
    private javax.swing.JTextField txtCityAddEmployee;
    private javax.swing.JTextField txtCityModifyEmployee;
    private javax.swing.JTextField txtEmailAddEmployee;
    private javax.swing.JTextField txtEmailModifyEmployee;
    private javax.swing.JTextField txtFirstNameAddEmployee;
    private javax.swing.JTextField txtFirstNameModifyEmployee;
    private javax.swing.JTextField txtIdAddEmployee;
    private javax.swing.JTextField txtIdModifyEmployee;
    private javax.swing.JTextField txtIdNumberRemoveEmployee;
    private javax.swing.JTextField txtIdSearchEmployee;
    private javax.swing.JTextField txtLastNameAddEmployee;
    private javax.swing.JTextField txtLastNameModifyEmployee;
    private javax.swing.JTextField txtPhoneAddEmployee;
    private javax.swing.JTextField txtPhoneModifyEmployee;
    private javax.swing.JTextField txtStateAddEmployee;
    private javax.swing.JTextField txtStateModifyEmployee;
    private javax.swing.JTextField txtStreetAddEmployee;
    private javax.swing.JTextField txtUserNameAddEmployee;
    private javax.swing.JTextField txtZipAddEmployee;
    private javax.swing.JTextField txtZipModifyEmployee;
    private javax.swing.JRadioButton unactiveModifyRadioButton;
    // End of variables declaration//GEN-END:variables

    private String detailsOfEmployee(Employee employee) {
        if (employee != null) {
            String result = "Here are detail of the product : \n";
            result = result + "Employee ID : " + employee.getEmployeeId() + "\n Employee First Name : " + employee.getFirstName()
                    + "\nEmployee Last Name " + employee.getLastName() + "\n Employee Email : " + employee.getEmail()
                    + "\n Employee Address : " + employee.getStreetAddress() + "\n Employee City : " + employee.getCity()
                    + "\n Employee Zip Code : " + employee.getZipCode() + "\n Employee State : " + employee.getState()
                    + "\n Employee Phone Number : " + employee.getTelephone();
            return result;
        } else {
            return "The employee does not exist";
        }
    }

    private void UpdateEmployee(ArrayList<Employee> employees, Employee employee) {
        for (Employee elt : employees) {
            if (employee.getEmployeeId().equals(elt.getEmployeeId())) {
                System.out.println("Update the Employee with ID " + employee.getEmployeeId());
                elt = employee;

            }
        }
        System.out.println("Completed from the list");
    }

    public void addRowToJTable() {
        try {
            
            DefaultTableModel model = (DefaultTableModel) employeeTable.getModel();
            ArrayList<Employee> list = getEmployeeFromFile("src/data/employee.csv");
            Object rowData[] = new Object[13];
            for (int i = 0; i < list.size(); i++) {
                //getEmployeeFromFile
                rowData[0] = list.get(i).getFirstName();
                rowData[1] = list.get(i).getLastName();
                rowData[2] = list.get(i).getEmail();
                rowData[3] = list.get(i).getStreetAddress();
                rowData[4] = list.get(i).getCity();
                rowData[5] = list.get(i).getZipCode();
                rowData[6] = list.get(i).getState();
                rowData[7] = list.get(i).getTelephone();
                rowData[8] = list.get(i).getEmployeeId();
                rowData[9] = list.get(i).getHireDate();
                rowData[10] = list.get(i).getLeaveDate();
                rowData[11] = list.get(i).getEmployeeStatus();
                rowData[12] = list.get(i).getUserName();
              

                model.addRow(rowData);
            }
        } catch (IOException ex) {
            Logger.getLogger(ManagerFrame.class.getName()).log(Level.SEVERE, null, ex);

        }
    }
}
